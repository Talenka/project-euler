/**
 * Triangular, pentagonal, and hexagonal numbers are generated by the following
 * formulae:
 *
 * Triangular T(n) = n * (n + 1) / 2   : 1, 3, 6, 10, 15, ...
 * Pentagonal P(n) = n * (3*n − 1) / 2 : 1, 5, 12, 22, 35, ...
 * Hexagonal  H(n) = n * (2*n − 1)     : 1, 6, 15, 28, 45, ...
 *
 * It can be verified that T(285) = P(165) = H(143) = 40755.
 *
 * Find the next triangle number that is also pentagonal and hexagonal.
 *
 * @see {@link https://projecteuler.net/problem=45}
 * Solution: 1533776805
 */
'use strict';

const triangular = [];
const pentagonal = [];
const hexagonal = [];

for (let i = 1; i < 100000; i++) {
  triangular[i] = i * (i + 1) / 2;
  pentagonal[i] = i * (3 * i - 1) / 2;
  hexagonal[i] = i * (2 * i - 1);
}

// We strip not-pentagonal (then hexagonal) from triangular, this is it.
const tripentahexa = triangular.filter((n) => pentagonal.includes(n))
    .filter((n) => hexagonal.includes(n));

console.log('Tri-Penta-Hexagonal numbers: ', tripentahexa);
